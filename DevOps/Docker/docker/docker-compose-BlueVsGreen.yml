version: "3.8"

services:
  vote:
    container_name: vote_app
    build: 
      dockerfile: ./vote/Dockerfile
    command: python app.py
    ports:
      - 5000:80
    volumes:
      - vote:/app
    restart: on-failure
    networks:
      - frontend
      - backend 

  result:
    container_name: result_app
    build: 
      dockerfile: ./result/Dockerfile
    command: nodemon server.js
    ports:
      - 5001:80
    restart: on-failure
    volumes:
      - result:/app
    networks:
      - frontend
      - backend 

  worker:
    container_name: worker_app
    build:
      dockerfile: ./worker/Dockerfile
    networks:
      - backend
    
  redis:
    container_name: redis
    image: redis:latest 
    restart: on-failure
    networks:
      - backend

  db:
    container_name: postgres
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: yourStrongPassword123#
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend
    volumes:
      - db:/var/lib/postgresql/data

networks:
  backend:
  frontend:
volumes:
  vote:
  result:
  db: